/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';

import { StoreManager as StoreManager } from './components/store/store-manager';

interface HTMLStoreManagerElement extends StoreManager, HTMLElement {
}
declare var HTMLStoreManagerElement: {
  prototype: HTMLStoreManagerElement;
  new (): HTMLStoreManagerElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "store-manager": HTMLStoreManagerElement;
  }
  interface ElementTagNameMap {
      "store-manager": HTMLStoreManagerElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "store-manager": JSXElements.StoreManagerAttributes;
      }
  }
  namespace JSXElements {
      export interface StoreManagerAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
      }
  }
}

import { TodoList as TodoList } from './components/todo-list/todo-list';

interface HTMLTodoListElement extends TodoList, HTMLElement {
}
declare var HTMLTodoListElement: {
  prototype: HTMLTodoListElement;
  new (): HTMLTodoListElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "todo-list": HTMLTodoListElement;
  }
  interface ElementTagNameMap {
      "todo-list": HTMLTodoListElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "todo-list": JSXElements.TodoListAttributes;
      }
  }
  namespace JSXElements {
      export interface TodoListAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
          storeManagerLoader?: any
      }
  }
}

import { Todo as MyTodo } from './components/todo/todo';

interface HTMLMyTodoElement extends MyTodo, HTMLElement {
}
declare var HTMLMyTodoElement: {
  prototype: HTMLMyTodoElement;
  new (): HTMLMyTodoElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "my-todo": HTMLMyTodoElement;
  }
  interface ElementTagNameMap {
      "my-todo": HTMLMyTodoElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "my-todo": JSXElements.MyTodoAttributes;
      }
  }
  namespace JSXElements {
      export interface MyTodoAttributes extends HTMLAttributes {
          mode?: string,
          color?: string,
        
          storeManagerLoader?: any,
          value?: string,
          id?: string
      }
  }
}

